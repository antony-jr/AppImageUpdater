language: cpp
compiler: gcc
sudo: require
dist: xenial

before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-xenial -y
  - sudo apt-get update -qq

install:
  - sudo apt-get -y install build-essential git libgl1-mesa-dev xvfb qt510base
  - source /opt/qt*/bin/qt*-env.sh

script:
  - Xvfb :100 -ac &
  - export DISPLAY=:100.0
  - wget -q "https://www.openssl.org/source/openssl-1.1.1h.tar.gz"
  - tar -xf openssl-1.1.1h.tar.gz 
  - cd openssl-1.1.1h
  - ./config shared
  - make -j$(nproc) > /dev/null
  - sudo make install > /dev/null
  - cd ..
  - wget -q "https://dl.bintray.com/boostorg/release/1.74.0/source/boost_1_74_0.tar.gz"
  - tar -xf boost_1_74_0.tar.gz
  - cd boost_1_74_0
  - ./bootstrap.sh
  - sudo cp b2 /usr/bin/
  - echo "using gcc ;" > ~/user-config.jam
  - export BOOST_ROOT=$PWD
  - export BOOST_BUILD_PATH=$PWD/tools/build
  - sudo b2 cxxflags="-std=c++14" install --with-system > /dev/null
  - cd ..
  - wget -q "https://github.com/arvidn/libtorrent/releases/download/libtorrent-1.2.8/libtorrent-rasterbar-1.2.8.tar.gz"
  - tar -xf libtorrent-rasterbar-1.2.8.tar.gz
  - cd libtorrent-rasterbar-1.2.8
  - sudo b2 cxxflags="-std=c++14" variant=release boost-link=static link=shared fpic=on crypto=openssl install
  - cd ..
  - git clone https://github.com/antony-jr/AppImageUpdaterBridge
  - cd AppImageUpdaterBridge
  - git checkout 2.x
  - cmake -DDECENTRALIZED_UPDATE_ENABLED=ON .
  - make -j$(nproc)
  - sudo make install
  - cd .. # Finally we can build our main application
  - export VERSION=$(git rev-parse --short HEAD)
  - export APPIMAGE_UPDATER_VERSION=2-alpha
  - export APPIMAGE_UPDATER_COMMIT=$(git rev-parse --short HEAD)
  - export APPIMAGE_UPDATER_BUILD_NO=$TRAVIS_BUILD_NUMBER 
  - export APPIMAGE_UPDATER_BUILD_TIME=$(date) 
  - cmake .
  - make -j$(nproc)
  - mkdir -p appdir/usr/bin ; strip AppImageUpdater ; cp AppImageUpdater appdir/usr/bin/
  - mkdir -p appdir/usr/share/applications ; cp build_resources/AppImageUpdater.desktop appdir/usr/share/applications/
  - mkdir -p appdir/usr/share/icons/hicolor/256x256/apps/ ; cp build_resources/AppImageUpdater.png appdir/usr/share/icons/hicolor/256x256/apps/AppImageUpdater.png
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - export VERSION=$(git rev-parse --short HEAD)
  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -bundle-non-qt-libs
  - wget -c -nv "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" 
  - chmod +x appimagetool-x86_64.AppImage
  - ./appimagetool-x86_64.AppImage -u "gh-releases-zsync|antony-jr|AppImageUpdater|continuous-2.x|AppImageUpdater*-x86_64.AppImage.zsync" appdir 
  - ls # for debug

after_success:
  - wget "https://github.com/probonopd/uploadtool/raw/master/upload.sh"
  - UPLOADTOOL_SUFFIX=2.x bash upload.sh AppImageUpdater*.AppImage*

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
